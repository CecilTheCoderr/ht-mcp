name: Windows Support CI

on:
  push:
    branches: [ feature/windows-support ]
  pull_request:
    branches: [ feature/windows-support ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Cross-Platform Test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
          - os: macos-latest
            rust: stable
          - os: windows-latest
            rust: stable

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Verify submodule branch
        run: |
          echo "Checking submodule branch..."
          git config -f .gitmodules --get submodule.ht-core.branch
          git submodule status
        shell: bash

      - name: List ht-core contents
        run: ls -la ht-core/
        shell: bash
          
      - name: Show Rust info
        run: |
          echo "Rust version:"
          rustc --version
          echo "Cargo version:"  
          cargo --version
          echo "Targets:"
          rustup target list --installed
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Lint with clippy
        run: cargo clippy --package ht-mcp --all-targets

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose
        env:
          RUSTFLAGS: "--cfg ci"

      - name: Build release binary
        run: cargo build --release